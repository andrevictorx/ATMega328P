
teste_temporizador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000404  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000d4  00000000  00000000  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000404  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000433  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000441  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a6e  00000000  00000000  00000489  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000639  00000000  00000000  00000ef7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a6  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000104  00000000  00000000  000018d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000196  00000000  00000000  00001be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001d7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000002fc  000002fc  000003f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001db4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.inicia_timer0 00000010  000002ec  000002ec  000003e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.debouncing_pc0 0000005e  000001de  000001de  000002d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.debouncing_pc1 0000005e  0000023c  0000023c  00000330  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000003c  0000029a  0000029a  0000038e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_14 0000009e  000000d4  000000d4  000001c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__vector_4 0000006c  00000172  00000172  00000266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .bss.timer_counter 00000004  00800106  00800106  00000404  2**0
                  ALLOC
 22 .data.tempo_debounce 00000004  0080010a  0000030a  000003fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss.flag_pc1 00000001  0080010e  0080010e  00000404  2**0
                  ALLOC
 24 .bss.flag_pc0 00000001  0080010f  0080010f  00000404  2**0
                  ALLOC
 25 .data.zerado  00000001  00800110  0000030e  00000402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .data.pausado 00000001  00800111  0000030f  00000403  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 27 .text.__dummy_fini 00000002  00000304  00000304  000003f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__dummy_funcs_on_exit 00000002  00000306  00000306  000003fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_simulator_exit 00000002  00000308  00000308  000003fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.exit    00000016  000002d6  000002d6  000003ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text._Exit   00000004  00000300  00000300  000003f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
   4:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
   8:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
   c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  10:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_4>
  14:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  18:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  1c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  20:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  24:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  28:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  2c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  30:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  34:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_etext>
  3c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  40:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  44:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  48:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  4c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  50:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  54:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  58:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  5c:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  60:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>
  64:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0a       	sbc	r0, r17
  6c:	80 01       	movw	r16, r0
  6e:	0a 01       	movw	r0, r20
  70:	0e 00       	.word	0x000e	; ????
  72:	03 0a       	sbc	r0, r19
  74:	01 0e       	add	r0, r17
  76:	01 10       	cpse	r0, r1
  78:	80 01       	movw	r16, r0
  7a:	10 01       	movw	r2, r0
  7c:	12 00       	.word	0x0012	; ????
  7e:	03 0e       	add	r0, r19

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d8 e0       	ldi	r29, 0x08	; 8
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	e8 e6       	ldi	r30, 0x68	; 104
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	40 e0       	ldi	r20, 0x00	; 0
  92:	17 c0       	rjmp	.+46     	; 0xc2 <__do_clear_bss+0x8>
  94:	b5 91       	lpm	r27, Z+
  96:	a5 91       	lpm	r26, Z+
  98:	35 91       	lpm	r19, Z+
  9a:	25 91       	lpm	r18, Z+
  9c:	05 91       	lpm	r16, Z+
  9e:	07 fd       	sbrc	r16, 7
  a0:	0c c0       	rjmp	.+24     	; 0xba <__do_clear_bss>
  a2:	95 91       	lpm	r25, Z+
  a4:	85 91       	lpm	r24, Z+
  a6:	ef 01       	movw	r28, r30
  a8:	f9 2f       	mov	r31, r25
  aa:	e8 2f       	mov	r30, r24
  ac:	05 90       	lpm	r0, Z+
  ae:	0d 92       	st	X+, r0
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	d9 f7       	brne	.-10     	; 0xac <__do_copy_data+0x20>
  b6:	fe 01       	movw	r30, r28
  b8:	04 c0       	rjmp	.+8      	; 0xc2 <__do_clear_bss+0x8>

000000ba <__do_clear_bss>:
  ba:	1d 92       	st	X+, r1
  bc:	a2 17       	cp	r26, r18
  be:	b3 07       	cpc	r27, r19
  c0:	e1 f7       	brne	.-8      	; 0xba <__do_clear_bss>
  c2:	e0 38       	cpi	r30, 0x80	; 128
  c4:	f4 07       	cpc	r31, r20
  c6:	31 f7       	brne	.-52     	; 0x94 <__do_copy_data+0x8>
  c8:	0e 94 4d 01 	call	0x29a	; 0x29a <main>
  cc:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <exit>

000000d0 <_exit>:
  d0:	f8 94       	cli

000000d2 <__stop_program>:
  d2:	ff cf       	rjmp	.-2      	; 0xd2 <__stop_program>

Disassembly of section .text:

000002fc <__bad_interrupt>:
 2fc:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.inicia_timer0:

000002ec <inicia_timer0>:
unsigned char pausado = 1, zerado = 1, flag_pc0 = 0, flag_pc1 = 0;
unsigned long tempo_debounce = 1000, timer_counter = 0;

void inicia_timer0(){
	// TIMER0
	TCCR0A = 0b00000010; // CTC Mode
 2ec:	82 e0       	ldi	r24, 0x02	; 2
 2ee:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000010; // PRESCALER = 8
 2f0:	85 bd       	out	0x25, r24	; 37
	OCR0A = 124; // 125*(1us)*8 = 1ms
 2f2:	9c e7       	ldi	r25, 0x7C	; 124
 2f4:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = 0b00000010; // Habilita interrupção na comparação com OCR0A
 2f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 2fa:	08 95       	ret

Disassembly of section .text.debouncing_pc0:

000001de <debouncing_pc0>:
}
void debouncing_pc0(){
	estado_atual_pc0 = (PINC & (1 << PINC0));
 1de:	86 b1       	in	r24, 0x06	; 6
 1e0:	81 70       	andi	r24, 0x01	; 1
 1e2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <estado_atual_pc0>
	if((estado_atual_pc0 == estado_passado_pc0) && (pc0_pressionado ==1)){
 1e6:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <estado_passado_pc0>
 1ea:	89 13       	cpse	r24, r25
 1ec:	06 c0       	rjmp	.+12     	; 0x1fa <debouncing_pc0+0x1c>
 1ee:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <pc0_pressionado>
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	11 f4       	brne	.+4      	; 0x1fa <debouncing_pc0+0x1c>
		flag_pc0 = 1;
 1f6:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <flag_pc0>
	}
	if((pc0_pressionado ==0) && (flag_pc0 == 1) && (pausado == 1)){
 1fa:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <pc0_pressionado>
 1fe:	81 11       	cpse	r24, r1
 200:	0d c0       	rjmp	.+26     	; 0x21c <debouncing_pc0+0x3e>
 202:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <flag_pc0>
 206:	91 30       	cpi	r25, 0x01	; 1
 208:	49 f4       	brne	.+18     	; 0x21c <debouncing_pc0+0x3e>
 20a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <pausado>
 20e:	91 30       	cpi	r25, 0x01	; 1
 210:	29 f4       	brne	.+10     	; 0x21c <debouncing_pc0+0x3e>
		pausado = 0;
 212:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <pausado>
		flag_pc0 = 0;
 216:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <flag_pc0>
 21a:	08 95       	ret
	}
	else if ((pc0_pressionado ==0) && (flag_pc0 == 1) && (pausado == 0)){
 21c:	81 11       	cpse	r24, r1
 21e:	0d c0       	rjmp	.+26     	; 0x23a <debouncing_pc0+0x5c>
 220:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <flag_pc0>
 224:	81 30       	cpi	r24, 0x01	; 1
 226:	49 f4       	brne	.+18     	; 0x23a <debouncing_pc0+0x5c>
 228:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <pausado>
 22c:	81 11       	cpse	r24, r1
 22e:	05 c0       	rjmp	.+10     	; 0x23a <debouncing_pc0+0x5c>
		pausado = 1;
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <pausado>
		flag_pc0 = 0;
 236:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <flag_pc0>
 23a:	08 95       	ret

Disassembly of section .text.debouncing_pc1:

0000023c <debouncing_pc1>:
	}
}
void debouncing_pc1(){
	estado_atual_pc1 = (PINC & (1 << PINC1));
 23c:	86 b1       	in	r24, 0x06	; 6
 23e:	82 70       	andi	r24, 0x02	; 2
 240:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	if((estado_atual_pc1 == estado_passado_pc1) && (pc1_pressionado ==1)){
 244:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <estado_passado_pc1>
 248:	89 13       	cpse	r24, r25
 24a:	06 c0       	rjmp	.+12     	; 0x258 <debouncing_pc1+0x1c>
 24c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <pc1_pressionado>
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	11 f4       	brne	.+4      	; 0x258 <debouncing_pc1+0x1c>
		flag_pc1 = 1;
 254:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <flag_pc1>
	}
	if((pc1_pressionado ==0) && (flag_pc1 == 1) && (zerado == 1)){
 258:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <pc1_pressionado>
 25c:	81 11       	cpse	r24, r1
 25e:	0d c0       	rjmp	.+26     	; 0x27a <debouncing_pc1+0x3e>
 260:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <flag_pc1>
 264:	91 30       	cpi	r25, 0x01	; 1
 266:	49 f4       	brne	.+18     	; 0x27a <debouncing_pc1+0x3e>
 268:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <zerado>
 26c:	91 30       	cpi	r25, 0x01	; 1
 26e:	29 f4       	brne	.+10     	; 0x27a <debouncing_pc1+0x3e>
		zerado = 0;
 270:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <zerado>
		flag_pc1 = 0;
 274:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <flag_pc1>
 278:	08 95       	ret
	}
	else if ((pc1_pressionado ==0) && (flag_pc1 == 1) && (zerado == 0)){
 27a:	81 11       	cpse	r24, r1
 27c:	0d c0       	rjmp	.+26     	; 0x298 <debouncing_pc1+0x5c>
 27e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <flag_pc1>
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	49 f4       	brne	.+18     	; 0x298 <debouncing_pc1+0x5c>
 286:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <zerado>
 28a:	81 11       	cpse	r24, r1
 28c:	05 c0       	rjmp	.+10     	; 0x298 <debouncing_pc1+0x5c>
		zerado = 1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <zerado>
		flag_pc1 = 0;
 294:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <flag_pc1>
 298:	08 95       	ret

Disassembly of section .text.main:

0000029a <main>:
	}
}

int main(void) {
	DDRD = 0xFF; // Configura PORTD como saída
 29a:	9f ef       	ldi	r25, 0xFF	; 255
 29c:	9a b9       	out	0x0a, r25	; 10
	PORTD = 0x00; // Inicia PORTD com valor baixo
 29e:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0x00; // Configura PORTC como entrada
 2a0:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x03; // Habilita resistores de pull-up nos pinos PC0 e PC1
 2a2:	83 e0       	ldi	r24, 0x03	; 3
 2a4:	88 b9       	out	0x08, r24	; 8
	DDRB = 0xFF;
 2a6:	94 b9       	out	0x04, r25	; 4
	PCICR = (1 << PCIE1); // Habilita interrupção de pin change no PORTC
 2a8:	92 e0       	ldi	r25, 0x02	; 2
 2aa:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK1 = (1 << PCINT8) | (1 << PCINT9); // Habilita interrupção nos pinos PC0 e PC1 (PCINT8 e PCINT9)
 2ae:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7f806c>
	sei(); // Habilita interrupções globais
 2b2:	78 94       	sei
	
	while(1) {
		if (zerado == 0 || pausado == 0) {
 2b4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <zerado>
 2b8:	88 23       	and	r24, r24
 2ba:	21 f0       	breq	.+8      	; 0x2c4 <main+0x2a>
 2bc:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <pausado>
 2c0:	91 11       	cpse	r25, r1
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <main+0x30>
			PORTD = 0xFF; // Liga LED
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	8b b9       	out	0x0b, r24	; 11
 2c8:	f5 cf       	rjmp	.-22     	; 0x2b4 <main+0x1a>
		}
		else if (zerado == 1 || pausado == 1){
 2ca:	81 30       	cpi	r24, 0x01	; 1
 2cc:	11 f0       	breq	.+4      	; 0x2d2 <main+0x38>
 2ce:	91 30       	cpi	r25, 0x01	; 1
 2d0:	89 f7       	brne	.-30     	; 0x2b4 <main+0x1a>
			PORTD = 0x00;
 2d2:	1b b8       	out	0x0b, r1	; 11
 2d4:	ef cf       	rjmp	.-34     	; 0x2b4 <main+0x1a>

Disassembly of section .text.__vector_14:

000000d4 <__vector_14>:
		}
		
	}
}

ISR(TIMER0_COMPA_vect) {
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	2f 93       	push	r18
  e0:	3f 93       	push	r19
  e2:	4f 93       	push	r20
  e4:	5f 93       	push	r21
  e6:	6f 93       	push	r22
  e8:	7f 93       	push	r23
  ea:	8f 93       	push	r24
  ec:	9f 93       	push	r25
  ee:	af 93       	push	r26
  f0:	bf 93       	push	r27
  f2:	ef 93       	push	r30
  f4:	ff 93       	push	r31
	if (timer_counter < tempo_debounce) {
  f6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_end>
  fa:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_end+0x1>
  fe:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_end+0x2>
 102:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_end+0x3>
 106:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <tempo_debounce>
 10a:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <tempo_debounce+0x1>
 10e:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <tempo_debounce+0x2>
 112:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <tempo_debounce+0x3>
 116:	84 17       	cp	r24, r20
 118:	95 07       	cpc	r25, r21
 11a:	a6 07       	cpc	r26, r22
 11c:	b7 07       	cpc	r27, r23
 11e:	60 f4       	brcc	.+24     	; 0x138 <__vector_14+0x64>
		timer_counter++;
 120:	01 96       	adiw	r24, 0x01	; 1
 122:	a1 1d       	adc	r26, r1
 124:	b1 1d       	adc	r27, r1
 126:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_end>
 12a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_end+0x1>
 12e:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <_end+0x2>
 132:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <_end+0x3>
 136:	0c c0       	rjmp	.+24     	; 0x150 <__vector_14+0x7c>
	}
	else{
		timer_counter = 0;
 138:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <_end>
 13c:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <_end+0x1>
 140:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <_end+0x2>
 144:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <_end+0x3>
		debouncing_pc0();
 148:	0e 94 ef 00 	call	0x1de	; 0x1de <debouncing_pc0>
		debouncing_pc1();
 14c:	0e 94 1e 01 	call	0x23c	; 0x23c <debouncing_pc1>
	}
}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

Disassembly of section .text.__vector_4:

00000172 <__vector_4>:

ISR(PCINT1_vect) {
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	2f 93       	push	r18
 17e:	3f 93       	push	r19
 180:	4f 93       	push	r20
 182:	5f 93       	push	r21
 184:	6f 93       	push	r22
 186:	7f 93       	push	r23
 188:	8f 93       	push	r24
 18a:	9f 93       	push	r25
 18c:	af 93       	push	r26
 18e:	bf 93       	push	r27
 190:	ef 93       	push	r30
 192:	ff 93       	push	r31
	estado_passado_pc0 = (PINC & (1 << PINC0));
 194:	86 b1       	in	r24, 0x06	; 6
 196:	81 70       	andi	r24, 0x01	; 1
 198:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <estado_passado_pc0>
	pc0_pressionado = !(estado_passado_pc0);
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	81 11       	cpse	r24, r1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <pc0_pressionado>
	estado_passado_pc1 = (PINC & (1 << PINC1));
 1a6:	86 b1       	in	r24, 0x06	; 6
 1a8:	82 70       	andi	r24, 0x02	; 2
 1aa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <estado_passado_pc1>
	pc1_pressionado = !(estado_passado_pc1);
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	81 11       	cpse	r24, r1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <pc1_pressionado>
	inicia_timer0();
 1b8:	0e 94 76 01 	call	0x2ec	; 0x2ec <inicia_timer0>
}
 1bc:	ff 91       	pop	r31
 1be:	ef 91       	pop	r30
 1c0:	bf 91       	pop	r27
 1c2:	af 91       	pop	r26
 1c4:	9f 91       	pop	r25
 1c6:	8f 91       	pop	r24
 1c8:	7f 91       	pop	r23
 1ca:	6f 91       	pop	r22
 1cc:	5f 91       	pop	r21
 1ce:	4f 91       	pop	r20
 1d0:	3f 91       	pop	r19
 1d2:	2f 91       	pop	r18
 1d4:	0f 90       	pop	r0
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	0f 90       	pop	r0
 1da:	1f 90       	pop	r1
 1dc:	18 95       	reti

Disassembly of section .text.__dummy_fini:

00000304 <_fini>:
 304:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000306 <__funcs_on_exit>:
 306:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000308 <__simulator_exit>:
 308:	08 95       	ret

Disassembly of section .text.exit:

000002d6 <exit>:
 2d6:	ec 01       	movw	r28, r24
 2d8:	0e 94 83 01 	call	0x306	; 0x306 <__funcs_on_exit>
 2dc:	0e 94 82 01 	call	0x304	; 0x304 <_fini>
 2e0:	ce 01       	movw	r24, r28
 2e2:	0e 94 84 01 	call	0x308	; 0x308 <__simulator_exit>
 2e6:	ce 01       	movw	r24, r28
 2e8:	0e 94 80 01 	call	0x300	; 0x300 <_Exit>

Disassembly of section .text._Exit:

00000300 <_Exit>:
 300:	0e 94 68 00 	call	0xd0	; 0xd0 <_exit>
